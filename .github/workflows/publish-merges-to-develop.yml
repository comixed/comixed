# GOAL: To create a new release artifact whenever code is merged into the develop branch after first performing
#       a build and, if successfully, tagging the commit with a version and timestamp.

name: "Publish commits on develop"

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Cache Maven artifacts
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - name: Setup build environment
        uses: actions/setup-java@v1
        with:
          java-version: 12
      - name: Build code and run all unit tests
        run: mvn test -Pci
      - name: Apply a tag to the new commit
        id: apply_github_tag
        uses: mcpierce/github-commit-timestamp-tagger@master
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          base_version: "0.7.0-0"
      - name: Create the release artifact
        run: mvn package -Pci -DskipTests -Dassembly.name=${{ steps.apply_github_tag.outputs.tag_time }}
      - name: Publish the release artifact
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.apply_github_tag.outputs.tag_name }}
          release_name: ${{ steps.apply_github_tag.outputs.tag_name }}
          draft: false
          prerelease: true
      - name: Upload release artifact
        id: upload-release-asset
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/comixed-app-${{ steps.apply_github_tag.outputs.tag_name }}.zip
          asset_name: comixed-app-${{ steps.apply_github_tag.outputs.tag_name }}.zip
          asset_content_type: application/zip
